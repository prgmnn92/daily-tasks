{"version":3,"sources":["components/footer/footer.component.jsx","components/taskinput/taskinput.component.jsx","components/sidebar/sidebar.component.jsx","components/taskcard/taskcard.component.jsx","components/tasklist/tasklist.component.jsx","components/dashboard/dashboard.component.jsx","components/modal/modal.component.jsx","pages/home/home.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Footer","className","TaskInput","titleHandler","bodyHandler","title","body","addTask","Form","Group","controlId","Label","Control","value","onChange","type","placeholder","as","rows","Button","onClick","variant","Sidebar","props","styles","taskcard","backgroundColor","padding","borderRadius","maxHeight","height","marginBottom","fontSize","fontWeight","text","buttons","display","alignItems","justifyContent","time","deleteBtn","position","top","right","cursor","TaskCard","taskData","startTask","finishTask","deleteTask","dateHandler","date","undefined","moment","format","Card","style","id","Body","Title","Row","Col","sm","startedAt","finishedAt","size","disabled","isFinished","TaskList","tasks","dropid","length","map","task","key","Dashboard","openTasks","progressTasks","doneTasks","dragEnd","modal","Home","state","showModal","ID","Math","random","toString","substr","onChangeTitle","e","setState","currentTarget","onChangeBody","listName","toLowerCase","includes","filter","localStorage","setItem","JSON","stringify","addTaskHandler","startTaskHandler","newProgressTasks","newOpenTasks","Date","push","console","log","finishTaskHandler","newDoneTasks","parse","getItem","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6e26ff6b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./footer.styles.scss\";\r\n\r\nconst Footer = () => <div className=\"footer\">footer</div>;\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nimport './taskinput.styles.scss';\r\n\r\nconst TaskInput = ({ titleHandler, bodyHandler, title, body, addTask }) => (\r\n\t<div className=\"taskinput\">\r\n\t\t<Form>\r\n\t\t\t<Form.Group controlId=\"exampleForm.ControlInput1\">\r\n\t\t\t\t<Form.Label className=\"taskinput__label\">Title</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\tvalue={title}\r\n\t\t\t\t\tonChange={titleHandler}\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"title\"\r\n\t\t\t\t\tclassName=\"taskinput__title-input\"\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Form.Group controlId=\"exampleForm.ControlTextarea1\">\r\n\t\t\t\t<Form.Label className=\"taskinput__label\">Task Description</Form.Label>\r\n\t\t\t\t<Form.Control\r\n\t\t\t\t\tvalue={body}\r\n\t\t\t\t\tonChange={bodyHandler}\r\n\t\t\t\t\tas=\"textarea\"\r\n\t\t\t\t\trows=\"6\"\r\n\t\t\t\t\tclassName=\"taskinput__body-input\"\r\n\t\t\t\t/>\r\n\t\t\t</Form.Group>\r\n\t\t</Form>\r\n\t\t<Button onClick={addTask} variant=\"primary\" className=\"taskinput__btn\">\r\n\t\t\tADD\r\n\t\t</Button>\r\n\t</div>\r\n);\r\n\r\nexport default TaskInput;\r\n","import React from \"react\";\r\n\r\nimport Footer from \"../footer/footer.component\";\r\nimport TaskInput from \"../taskinput/taskinput.component\";\r\n\r\nimport \"./sidebar.styles.scss\";\r\n\r\nconst Sidebar = (props) => (\r\n  <div className=\"sidebar\">\r\n    <h1 className=\"sidebar__header\">Daily Tasks</h1>\r\n    <TaskInput {...props} />\r\n    <Footer />\r\n  </div>\r\n);\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { Button, Row, Col, Card } from 'react-bootstrap';\r\n\r\nimport './taskcard.styles.scss';\r\n\r\nconst styles = {\r\n\ttaskcard: {\r\n\t\tbackgroundColor: '#fff',\r\n\t\tpadding: '1rem .8rem',\r\n\t\tborderRadius: '5px',\r\n\t\tmaxHeight: '18rem',\r\n\t\theight: '18rem',\r\n\t\tmarginBottom: '1rem'\r\n\t},\r\n\ttitle: {\r\n\t\tmarginBottom: '1rem',\r\n\t\tfontSize: '1.8rem',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tbody: {\r\n\t\tfontSize: '1.4rem'\r\n\t},\r\n\ttext: {\r\n\t\tmarginBottom: '1rem'\r\n\t},\r\n\tbuttons: {\r\n\t\tdisplay: 'flex',\r\n\t\talignItems: 'flex-end',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tmarginBottom: '.2rem'\r\n\t},\r\n\ttime: {\r\n\t\tfontWeight: 'bold',\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\tmarginBottom: '.2rem'\r\n\t},\r\n\tdeleteBtn: {\r\n\t\tposition: 'absolute',\r\n\t\ttop: '1rem',\r\n\t\tright: '1rem',\r\n\t\tcursor: 'pointer'\r\n\t}\r\n};\r\n\r\nconst TaskCard = ({ taskData, startTask, finishTask, deleteTask, title }) => {\r\n\tconst dateHandler = (date) => {\r\n\t\tif (date === undefined) {\r\n\t\t\treturn '---';\r\n\t\t}\r\n\r\n\t\treturn moment(date).format('hh:mm a');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Card style={styles.taskcard} className=\"taskcard\">\r\n\t\t\t<div onClick={() => deleteTask(title, taskData.id)} style={styles.deleteBtn}>\r\n\t\t\t\tX\r\n\t\t\t</div>\r\n\t\t\t<Card.Body style={styles.body}>\r\n\t\t\t\t<Card.Title>\r\n\t\t\t\t\t<h3 style={styles.title}>{taskData.title}</h3>\r\n\t\t\t\t</Card.Title>\r\n\t\t\t\t<p style={styles.text}>{taskData.body}</p>\r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col sm={6}>\r\n\t\t\t\t\t\t<p style={styles.time}>\r\n\t\t\t\t\t\t\t<span>Started at:</span>\r\n\t\t\t\t\t\t\t<span>{dateHandler(taskData.startedAt)}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t<p style={styles.time}>\r\n\t\t\t\t\t\t\t<span>Finished at:</span>\r\n\t\t\t\t\t\t\t<span>{dateHandler(taskData.finishedAt)}</span>\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col style={styles.buttons} sm={6}>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\tdisabled={taskData.isFinished === true || taskData.isFinished === false}\r\n\t\t\t\t\t\t\tclassName={'taskcard__btn'}\r\n\t\t\t\t\t\t\tonClick={() => startTask(taskData.id)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSTART\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\tdisabled={taskData.isFinished === undefined || taskData.isFinished === true}\r\n\t\t\t\t\t\t\tclassName={'taskcard__btn'}\r\n\t\t\t\t\t\t\tonClick={() => finishTask(taskData.id)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tFINISH\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default TaskCard;\r\n","import React from 'react';\r\n\r\nimport TaskCard from '../taskcard/taskcard.component';\r\n\r\nimport './tasklist.styles.scss';\r\n\r\nconst TaskList = ({ title, tasks, startTask, finishTask, dropid, deleteTask }) => (\r\n\t<div className=\"tasklist\">\r\n\t\t<h2 className=\"tasklist__header\">{title}</h2>\r\n\t\t<div className=\"tasklist__list\">\r\n\t\t\t{tasks && tasks.length ? (\r\n\t\t\t\ttasks.map((task, id) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<TaskCard\r\n\t\t\t\t\t\t\tstartTask={startTask}\r\n\t\t\t\t\t\t\tfinishTask={finishTask}\r\n\t\t\t\t\t\t\tdeleteTask={deleteTask}\r\n\t\t\t\t\t\t\ttaskData={task}\r\n\t\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\t\ttitle={title}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t) : null}\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\n\r\nimport './dashboard.styles.scss';\r\nimport TaskList from '../tasklist/tasklist.component';\r\n\r\nconst Dashboard = ({ openTasks, progressTasks, doneTasks, startTask, finishTask, dragEnd, deleteTask }) => (\r\n\t<div className=\"dashboard\">\r\n\t\t<TaskList\r\n\t\t\tstartTask={startTask}\r\n\t\t\tfinishTask={finishTask}\r\n\t\t\tdeleteTask={deleteTask}\r\n\t\t\ttitle=\"Open\"\r\n\t\t\ttasks={openTasks}\r\n\t\t/>\r\n\t\t<TaskList\r\n\t\t\tstartTask={startTask}\r\n\t\t\tfinishTask={finishTask}\r\n\t\t\tdeleteTask={deleteTask}\r\n\t\t\ttitle=\"In Progress\"\r\n\t\t\ttasks={progressTasks}\r\n\t\t/>\r\n\t\t<TaskList\r\n\t\t\tstartTask={startTask}\r\n\t\t\tfinishTask={finishTask}\r\n\t\t\tdeleteTask={deleteTask}\r\n\t\t\ttitle=\"Done\"\r\n\t\t\ttasks={doneTasks}\r\n\t\t/>\r\n\t</div>\r\n);\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\n\r\nimport './modal.styles.scss';\r\n\r\nconst modal = () => {\r\n\treturn <div className=\"modal\">test</div>;\r\n};\r\n\r\nexport default modal;\r\n","import React, { Component } from 'react';\r\n\r\nimport './home.styles.scss';\r\nimport Sidebar from '../../components/sidebar/sidebar.component';\r\nimport Dashboard from '../../components/dashboard/dashboard.component';\r\nimport Modal from '../../components/modal/modal.component';\r\n\r\nclass Home extends Component {\r\n\tstate = {\r\n\t\topenTasks: [],\r\n\t\tprogressTasks: [],\r\n\t\tdoneTasks: [],\r\n\t\ttitle: '',\r\n\t\tbody: '',\r\n\t\tshowModal: false\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet openTasks = JSON.parse(localStorage.getItem('openTasks'));\r\n\t\tlet progressTasks = JSON.parse(localStorage.getItem('progressTasks'));\r\n\t\tlet doneTasks = JSON.parse(localStorage.getItem('doneTasks'));\r\n\t\tlet showModal = false;\r\n\r\n\t\tif (!openTasks && !progressTasks && !doneTasks) {\r\n\t\t\tshowModal = true;\r\n\t\t}\r\n\r\n\t\tthis.setState({\r\n\t\t\topenTasks: openTasks !== null ? [ ...openTasks ] : [],\r\n\t\t\tprogressTasks: progressTasks !== null ? [ ...progressTasks ] : [],\r\n\t\t\tdoneTasks: doneTasks !== null ? [ ...doneTasks ] : [],\r\n\t\t\tshowModal: showModal\r\n\t\t});\r\n\t}\r\n\r\n\tID = () => {\r\n\t\treturn '_' + Math.random().toString(36).substr(2, 9);\r\n\t};\r\n\r\n\tonChangeTitle = (e) => {\r\n\t\tthis.setState({ title: e.currentTarget.value });\r\n\t};\r\n\tonChangeBody = (e) => {\r\n\t\tthis.setState({ body: e.currentTarget.value });\r\n\t};\r\n\r\n\tdeleteTask = (listName, id) => {\r\n\t\tif (listName.toLowerCase().includes('open')) {\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\topenTasks: this.state.openTasks.filter((task) => task.id !== id)\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tlocalStorage.setItem('openTasks', JSON.stringify(this.state.openTasks));\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (listName.toLowerCase().includes('progress')) {\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\tprogressTasks: this.state.progressTasks.filter((task) => task.id !== id)\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tlocalStorage.setItem('progressTasks', JSON.stringify(this.state.progressTasks));\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tif (listName.toLowerCase().includes('done')) {\r\n\t\t\tthis.setState(\r\n\t\t\t\t{\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\tdoneTasks: this.state.doneTasks.filter((task) => task.id !== id)\r\n\t\t\t\t},\r\n\t\t\t\t() => {\r\n\t\t\t\t\tlocalStorage.setItem('doneTasks', JSON.stringify(this.state.doneTasks));\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\taddTaskHandler = () => {\r\n\t\tif (!this.state.title || !this.state.body) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\t...this.state,\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tbody: '',\r\n\t\t\t\topenTasks: [\r\n\t\t\t\t\t...this.state.openTasks,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: this.ID(),\r\n\t\t\t\t\t\ttitle: this.state.title,\r\n\t\t\t\t\t\tbody: this.state.body,\r\n\t\t\t\t\t\tstartedAt: undefined,\r\n\t\t\t\t\t\tfinishedAt: undefined,\r\n\t\t\t\t\t\tisFinished: undefined\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t},\r\n\t\t\t() => {\r\n\t\t\t\tlocalStorage.setItem('openTasks', JSON.stringify(this.state.openTasks));\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tstartTaskHandler = (id) => {\r\n\t\tlet newProgressTasks = [ ...this.state.progressTasks ];\r\n\t\tlet newOpenTasks = this.state.openTasks.filter((task) => {\r\n\t\t\tif (task.id === id) {\r\n\t\t\t\ttask.startedAt = new Date();\r\n\t\t\t\ttask.isFinished = false;\r\n\t\t\t\tnewProgressTasks.push(task);\r\n\t\t\t\tconsole.log(task);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\tthis.setState((state) => ({\r\n\t\t\t...state,\r\n\t\t\topenTasks: [ ...newOpenTasks ],\r\n\t\t\tprogressTasks: [ ...newProgressTasks ]\r\n\t\t}));\r\n\t\tlocalStorage.setItem('openTasks', JSON.stringify(newOpenTasks));\r\n\t\tlocalStorage.setItem('progressTasks', JSON.stringify(newProgressTasks));\r\n\t};\r\n\r\n\tfinishTaskHandler = (id) => {\r\n\t\tlet newDoneTasks = [ ...this.state.doneTasks ];\r\n\t\tlet newProgressTasks = this.state.progressTasks.filter((task) => {\r\n\t\t\tif (task.id === id) {\r\n\t\t\t\ttask.finishedAt = new Date();\r\n\t\t\t\ttask.isFinished = true;\r\n\t\t\t\tnewDoneTasks.push(task);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t});\r\n\r\n\t\tthis.setState((state) => ({\r\n\t\t\t...state,\r\n\t\t\tdoneTasks: [ ...newDoneTasks ],\r\n\t\t\tprogressTasks: [ ...newProgressTasks ]\r\n\t\t}));\r\n\t\tlocalStorage.setItem('doneTasks', JSON.stringify(newDoneTasks));\r\n\t\tlocalStorage.setItem('progressTasks', JSON.stringify(newProgressTasks));\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"home\">\r\n\t\t\t\t{this.state.showModal ? <Modal /> : null}\r\n\t\t\t\t<Sidebar\r\n\t\t\t\t\ttitleHandler={this.onChangeTitle}\r\n\t\t\t\t\tbodyHandler={this.onChangeBody}\r\n\t\t\t\t\ttitle={this.state.title}\r\n\t\t\t\t\tbody={this.state.body}\r\n\t\t\t\t\taddTask={this.addTaskHandler}\r\n\t\t\t\t/>\r\n\t\t\t\t<Dashboard\r\n\t\t\t\t\tdragEnd={this.dragEnd}\r\n\t\t\t\t\tstartTask={this.startTaskHandler}\r\n\t\t\t\t\tfinishTask={this.finishTaskHandler}\r\n\t\t\t\t\tdeleteTask={this.deleteTask}\r\n\t\t\t\t\topenTasks={this.state.openTasks}\r\n\t\t\t\t\tprogressTasks={this.state.progressTasks}\r\n\t\t\t\t\tdoneTasks={this.state.doneTasks}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport Home from \"./pages/home/home.component\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}